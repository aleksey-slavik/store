<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <mvc:annotation-driven content-negotiation-manager="contentManager"/>
    <context:component-scan base-package="com.globallogic.store.*"/>

    <bean id="contentManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="defaultContentType" value="application/json"/>
        <property name="useJaf" value="false"/>
    </bean>

    <!-- JSON Support -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <!-- Properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="classpath:store.properties" name="propertiesBean"/>

    <!-- Spring Rest Beans -->
    <bean name="userSpringRestController" class="com.globallogic.store.rest.UserSpringRestController">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean name="productSpringRestController" class="com.globallogic.store.rest.ProductSpringRestController">
        <property name="productDao" ref="productDao"/>
    </bean>

    <bean name="orderSpringRestController" class="com.globallogic.store.rest.OrderSpringRestController">
        <property name="orderDao" ref="orderDao"/>
        <property name="orderItemDao" ref="orderItemDao"/>
        <property name="userDao" ref="userDao"/>
    </bean>

    <!-- Spring Security -->
    <bean id="loginUserService" class="com.globallogic.store.security.LoginUserService">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="registerUserService" class="com.globallogic.store.security.RegisterUserService">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="userDetailsService" ref="loginUserService"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/store"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- <bean id="entityManagerFactory"
           class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
         <property name="dataSource" ref="dataSource" />
         <property name="packagesToScan" value="com.globallogic.store.domain" />
         <property name="jpaVendorAdapter">
             <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
         </property>
         <property name="jpaProperties">
             <props>
                 <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL95Dialect</prop>
             </props>
         </property>
     </bean>-->

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:aspectj-autoproxy/>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="userServicePointCut"
                      expression="execution(* com.globallogic.store.security.core.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut"/>
    </aop:config>

    <!-- Security Aspects -->
    <!--<bean id="userSecurityManager" class="com.globallogic.store.security.aop.UserSecurityManager"/>-->
</beans>