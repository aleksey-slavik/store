<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.globallogic.store"/>

    <!-- support JSR303 annotation if JSR 303 validation present on classpath -->
    <mvc:annotation-driven/>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

    <!-- JSON Support -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <!-- Properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="classpath:store.properties" name="propertiesBean"/>

    <!-- Enables swagger UI-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <!-- Include a swagger configuration-->
    <bean class="com.globallogic.store.swagger.SwaggerConfig"/>

    <!-- URL Handler -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="/">product</prop>
                <prop key="/home">product</prop>
                <prop key="/product">product</prop>
                <prop key="/login">login</prop>
                <prop key="/403">accessDenied</prop>
                <prop key="/register">register</prop>
                <prop key="/user">user</prop>
                <prop key="/order">order</prop>
                <prop key="/cart">cart</prop>
                <prop key="/account">account</prop>
            </props>
        </property>
    </bean>

    <!-- Controllers -->
    <bean id="product" class="com.globallogic.store.web.product.ProductWebController"/>
    <bean id="login" class="com.globallogic.store.web.user.LoginWebController"/>
    <bean id="accessDenied" class="com.globallogic.store.web.security.AccessDeniedWebController"/>
    <bean id="register" class="com.globallogic.store.web.user.RegistrationWebController">
        <property name="registerUserService" ref="registerUserService"/>
    </bean>
    <bean id="user" class="com.globallogic.store.web.user.UserWebController"/>
    <bean id="order" class="com.globallogic.store.web.order.OrderWebController"/>
    <bean id="cart" class="com.globallogic.store.web.order.CartWebController"/>
    <bean id="account" class="com.globallogic.store.web.user.AccountWebController"/>

    <!-- Exceptions Resolver -->
    <!--<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="com.globallogic.store.exception.NotFoundException">error/404</prop>
                <prop key="java.lang.Exception">error/error</prop>
                <prop key="java.lang.RuntimeException">error/error</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="error/404">404</prop>
                <prop key="error/error">500</prop>
            </props>
        </property>
    </bean>-->

    <!-- Resource resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Static resources-->
    <mvc:resources mapping="/style/**" location="/style/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/script/**" location="/script/"/>

    <!-- JSP Fragments -->
    <mvc:resources mapping="/parts/**" location="/parts/"/>

    <!-- DAO beans -->
    <bean name="userDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.user.User"/>
    </bean>

    <bean name="productDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.product.Product"/>
    </bean>

    <bean name="orderDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.order.Order"/>
    </bean>

    <bean name="orderItemDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.order.OrderItem"/>
    </bean>

    <!-- Spring Rest Beans -->
    <bean id="userRestController" class="com.globallogic.store.rest.UserRestController">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="productRestController" class="com.globallogic.store.rest.ProductRestController">
        <property name="productDao" ref="productDao"/>
    </bean>

    <bean id="orderRestController" class="com.globallogic.store.rest.OrderRestController">
        <property name="orderDao" ref="orderDao"/>
        <property name="orderItemDao" ref="orderItemDao"/>
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/store"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="tokenUtil" class="com.globallogic.store.security.jwt.TokenUtil"/>

    <bean id="loginUserService" class="com.globallogic.store.security.LoginUserService">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="registerUserService" class="com.globallogic.store.security.RegisterUserService">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="userDetailsService" ref="loginUserService"/>
    </bean>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:aspectj-autoproxy/>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="userServicePointCut"
                      expression="execution(* com.globallogic.store.security.core.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut"/>
    </aop:config>

    <!--<bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator" ref="permissionEvaluator"/>
    </bean>

    <bean id="permissionEvaluator" class="com.globallogic.store.security.acl.AccessPermissionEvaluator"/>

    <bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager">
                    <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                </property>
                <property name="cacheName" value="aclCache"/>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.security.acls.domain.DefaultPermissionGrantingStrategy">
                <constructor-arg>
                    <bean class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
                <constructor-arg>
                    <list>
                        <bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
                            <constructor-arg value="ROLE_ACL_ADMIN"/>
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="aclCache"/>
        <constructor-arg ref="aclAuthorizationStrategy"/>
        <constructor-arg>
            <bean class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
        </constructor-arg>
    </bean>

    <bean id="aclAuthorizationStrategy"
          class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
                    <constructor-arg value="ROLE_ADMIN"/>
                </bean>
                <bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
                    <constructor-arg value="ROLE_ADMIN "/>
                </bean>
                <bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
                    <constructor-arg value="ROLE_ADMIN "/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="aclService" class="org.springframework.security.acls.jdbc.JdbcMutableAclService">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="lookupStrategy"/>
        <constructor-arg ref="aclCache"/>
    </bean>-->
</beans>