<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.globallogic.store"/>

    <!-- support JSR303 annotation if JSR 303 validation present on classpath -->
    <mvc:annotation-driven validator="validator"/>

    <!-- Bean Validator -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <!-- JSON Support -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <!-- Properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="classpath:store.properties" name="propertiesBean"/>

    <!-- Enables swagger UI-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <!-- Include a swagger configuration-->
    <bean class="com.globallogic.store.swagger.SwaggerConfig"/>

    <!-- Resource resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Static resources-->
    <mvc:resources mapping="/style/**" location="/style/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/script/**" location="/script/"/>

    <!-- JSP Fragments -->
    <mvc:resources mapping="/parts/**" location="/parts/"/>

    <!-- DAO beans -->
    <bean name="userDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.user.User"/>
    </bean>

    <bean name="authorityDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.user.Authority"/>
    </bean>

    <bean name="productDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.product.Product"/>
    </bean>

    <bean name="orderDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.order.Order"/>
    </bean>

    <bean name="orderItemDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.order.OrderItem"/>
    </bean>

    <bean name="permissionDao" class="com.globallogic.store.dao.GenericDao">
        <constructor-arg value="com.globallogic.store.domain.permission.Permission"/>
    </bean>

    <!-- Services -->
    <bean id="productService" class="com.globallogic.store.service.ProductService">
        <constructor-arg name="productDao" ref="productDao"/>
        <constructor-arg name="userService" ref="userService"/>
    </bean>

    <bean id="userService" class="com.globallogic.store.service.UserService">
        <constructor-arg name="userDao" ref="userDao"/>
        <constructor-arg name="authorityService" ref="authorityService"/>
    </bean>

    <bean id="authorityService" class="com.globallogic.store.service.AuthorityService">
        <constructor-arg name="authorityDao" ref="authorityDao"/>
    </bean>

    <bean id="orderService" class="com.globallogic.store.service.OrderService">
        <constructor-arg name="orderDao" ref="orderDao"/>
        <constructor-arg name="orderItemService" ref="orderItemService"/>
        <constructor-arg name="userService" ref="userService"/>
    </bean>

    <bean class="com.globallogic.store.service.OrderItemService">
        <constructor-arg name="orderItemDao" ref="orderItemDao"/>
    </bean>

    <!-- Spring Rest Beans -->
    <bean id="userRestController" class="com.globallogic.store.rest.UserRestController">
        <constructor-arg name="userService" ref="userService"/>
        <constructor-arg name="userConverter" ref="userConverter"/>
        <constructor-arg name="authorityConverter" ref="authorityConverter"/>
        <constructor-arg name="registerUserService" ref="registerUserService"/>
    </bean>

    <bean id="productRestController" class="com.globallogic.store.rest.ProductRestController">
        <constructor-arg name="productService" ref="productService"/>
        <constructor-arg name="userService" ref="userService"/>
        <constructor-arg name="permissionService" ref="permissionService"/>
        <constructor-arg name="previewConverter" ref="productPreviewConverter"/>
        <constructor-arg name="productConverter" ref="productConverter"/>
        <constructor-arg name="sidConverter" ref="sidConverter"/>
    </bean>

    <bean id="orderRestController" class="com.globallogic.store.rest.OrderRestController">
        <constructor-arg name="orderService" ref="orderService"/>
        <constructor-arg name="orderItemService" ref="orderItemService"/>
        <constructor-arg name="userService" ref="userService"/>
        <constructor-arg name="orderConverter" ref="orderConverter"/>
        <constructor-arg name="orderItemConverter" ref="orderItemConverter"/>
    </bean>

    <!-- DTO Converters -->
    <bean id="productPreviewConverter" class="com.globallogic.store.converter.product.ProductPreviewConverter"/>
    <bean id="productConverter" class="com.globallogic.store.converter.product.ProductConverter"/>
    <bean id="userConverter" class="com.globallogic.store.converter.user.UserConverter"/>
    <bean id="authorityConverter" class="com.globallogic.store.converter.user.AuthorityConverter"/>
    <bean id="orderConverter" class="com.globallogic.store.converter.order.OrderConverter"/>
    <bean id="orderItemConverter" class="com.globallogic.store.converter.order.OrderItemConverter"/>
    <bean id="sidConverter" class="com.globallogic.store.converter.permission.SidConverter"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/store"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="tokenUtil" class="com.globallogic.store.security.jwt.TokenUtil"/>

    <bean id="loginUserService" class="com.globallogic.store.security.service.LoginUserService">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="registerUserService" class="com.globallogic.store.security.service.RegisterUserService">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="userDetailsService" ref="loginUserService"/>
    </bean>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:aspectj-autoproxy/>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="userServicePointCut"
                      expression="execution(* com.globallogic.store.security.service.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut"/>
    </aop:config>

    <!-- Access Control List Config -->
    <bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator" ref="permissionEvaluator"/>
    </bean>

    <bean id="permissionService" class="com.globallogic.store.security.service.PermissionService">
        <constructor-arg name="permissionDao" ref="permissionDao"/>
    </bean>

    <bean id="permissionEvaluator" class="com.globallogic.store.security.core.PrincipalPermissionEvaluator">
        <constructor-arg name="permissionService" ref="permissionService"/>
    </bean>
</beans>