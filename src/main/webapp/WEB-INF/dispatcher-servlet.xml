<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <mvc:annotation-driven content-negotiation-manager="contentManager"/>

    <bean id="contentManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="defaultContentType" value="application/json"/>
        <property name="useJaf" value="false"/>
    </bean>

    <context:component-scan base-package="com.globallogic.store.*"/>

    <!-- JSON Support -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <!-- URL Handler -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="/">homeController</prop>
                <prop key="/home">homeController</prop>
                <prop key="/login">loginController</prop>
                <prop key="/loginProcess">loginProcessController</prop>
                <prop key="/register">registerController</prop>
                <prop key="/registerProcess">registerProcessController</prop>
                <prop key="/logout">logoutController</prop>
                <prop key="/productList">productsController</prop>
                <prop key="/productItem">productListController</prop>
                <!--<prop key="/orders">ordersController</prop>-->
                <prop key="/addToCart">addToCartController</prop>
            </props>
        </property>
    </bean>

    <!-- Controllers -->
    <bean id="homeController" class="com.globallogic.store.controller.HomeController"/>
    <bean id="loginController" class="com.globallogic.store.controller.LoginController"/>
    <bean id="loginProcessController" class="com.globallogic.store.controller.LoginProcessController"/>
    <bean id="registerController" class="com.globallogic.store.controller.RegisterController"/>
    <bean id="registerProcessController" class="com.globallogic.store.controller.RegisterProcessController"/>
    <bean id="logoutController" class="com.globallogic.store.controller.LogoutController"/>
    <bean id="productsController" class="com.globallogic.store.controller.ProductsController"/>
    <!--<bean id="ordersController" class="com.globallogic.store.controller.OrdersController"/>-->
    <bean id="addToCartController" class="com.globallogic.store.controller.AddToCartController"/>
    <bean id="productListController" class="com.globallogic.store.controller.ProductItemController"/>

    <!-- Resource resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Static resources-->
    <mvc:resources mapping="/style/**" location="/style/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/script/**" location="/script/"/>

    <!-- JSP Fragments -->
    <mvc:resources mapping="/parts/**" location="/parts/"/>

    <!-- DAO injection -->
    <bean name="userDao" class="com.globallogic.store.dao.AbstractGenericDAO">
        <constructor-arg value="com.globallogic.store.model.User"/>
    </bean>
    <bean name="userController" class="com.globallogic.store.controller.rest.UserController">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean name="productDao" class="com.globallogic.store.dao.AbstractGenericDAO">
        <constructor-arg value="com.globallogic.store.model.Product"/>
    </bean>
    <bean name="productController" class="com.globallogic.store.controller.rest.ProductController">
        <property name="productDao" ref="productDao"/>
    </bean>

    <bean name="orderDao" class="com.globallogic.store.dao.AbstractGenericDAO">
        <constructor-arg value="com.globallogic.store.model.Order"/>
    </bean>
    <bean name="orderController" class="com.globallogic.store.controller.rest.OrderController">
        <property name="orderDao" ref="orderDao"/>
    </bean>

    <bean name="orderItemDao" class="com.globallogic.store.dao.AbstractGenericDAO">
        <constructor-arg value="com.globallogic.store.model.OrderItem"/>
    </bean>
    <bean name="orderItemController" class="com.globallogic.store.controller.rest.OrderItemController">
        <property name="orderItemDao" ref="orderItemDao"/>
    </bean>

    <bean id="userService" class="com.globallogic.store.service.UserService">
        <property name="userDao" ref="userDao" />
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/store"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="userServicePointCut"
                      expression="execution(* com.globallogic.store.service.*Service.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut" />
    </aop:config>
</beans>