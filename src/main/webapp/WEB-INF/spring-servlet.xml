<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <mvc:annotation-driven content-negotiation-manager="contentManager"/>

    <bean id="contentManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="defaultContentType" value="application/json"/>
        <property name="useJaf" value="false"/>
    </bean>

    <context:component-scan base-package="com.globallogic.store.*"/>

    <!-- JSON Support -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <!-- URL Handler -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="/">product</prop>
                <prop key="/home">product</prop>
                <prop key="/product">product</prop>
                <prop key="/login">login</prop>
                <prop key="/403">accessDenied</prop>
                <prop key="/register">register</prop>
                <prop key="/user">user</prop>
                <prop key="/order">order</prop>
                <prop key="/cart">cart</prop>
                <prop key="/account">account</prop>
            </props>
        </property>
    </bean>

    <!-- Controllers -->
    <bean id="product" class="com.globallogic.store.web.product.ProductWebController"/>
    <bean id="login" class="com.globallogic.store.web.user.LoginWebController"/>
    <bean id="accessDenied" class="com.globallogic.store.web.security.AccessDeniedWebController"/>
    <bean id="register" class="com.globallogic.store.web.user.RegistrationWebController">
        <property name="registerUserService" ref="registerUserService"/>
    </bean>
    <bean id="user" class="com.globallogic.store.web.user.UserWebController"/>
    <bean id="order" class="com.globallogic.store.web.order.OrderWebController"/>
    <bean id="cart" class="com.globallogic.store.web.order.CartWebController"/>
    <bean id="account" class="com.globallogic.store.web.user.AccountWebController"/>

    <!-- Resource resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Static resources-->
    <mvc:resources mapping="/style/**" location="/style/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/script/**" location="/script/"/>

    <!-- JSP Fragments -->
    <mvc:resources mapping="/parts/**" location="/parts/"/>

    <!-- DAO injection -->
    <bean name="userDao" class="com.globallogic.store.dao.AbstractDAO">
        <constructor-arg value="com.globallogic.store.model.User"/>
    </bean>
    <bean name="userRestController" class="com.globallogic.store.rest.spring.UserRestController">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean name="productDao" class="com.globallogic.store.dao.AbstractDAO">
        <constructor-arg value="com.globallogic.store.model.Product"/>
    </bean>
    <bean name="productRestController" class="com.globallogic.store.rest.spring.ProductRestController">
        <property name="productDao" ref="productDao"/>
    </bean>

    <bean name="orderDao" class="com.globallogic.store.dao.AbstractDAO">
        <constructor-arg value="com.globallogic.store.model.Order"/>
    </bean>
    <bean name="orderRestController" class="com.globallogic.store.rest.spring.OrderRestController">
        <property name="orderDao" ref="orderDao"/>
    </bean>

    <bean name="orderItemDao" class="com.globallogic.store.dao.AbstractDAO">
        <constructor-arg value="com.globallogic.store.model.OrderItem"/>
    </bean>
    <bean name="orderItemRestController" class="com.globallogic.store.rest.spring.OrderItemRestController">
        <property name="orderItemDao" ref="orderItemDao"/>
    </bean>

    <bean id="loginUserService" class="com.globallogic.store.security.spring.LoginUserService">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="registerUserService" class="com.globallogic.store.security.spring.RegisterUserService">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="userDetailsService" ref="loginUserService"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/store"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:aspectj-autoproxy/>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="userServicePointCut" expression="execution(* com.globallogic.store.security.spring.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="userDeleteAspectPointCut" expression="execution(* com.globallogic.store.rest.spring.UserRestController.deleteUserById(..))"/>
        <aop:pointcut id="userUpdateAspectPointCut" expression="execution(* com.globallogic.store.rest.spring.UserRestController.updateUser(..))"/>
        <aop:pointcut id="userSelectAllAspectPointCut" expression="execution(* com.globallogic.store.rest.spring.UserRestController.findUser(..))"/>
        <aop:pointcut id="userSelectAspectPointCut" expression="execution(* com.globallogic.store.rest.spring.UserRestController.getUserById(..))"/>

       <!-- <aop:aspect id="adminAccessAspect" ref="securityAspect">
            <aop:around method="checkAdminAccess" pointcut-ref="userDeleteAspectPointCut"/>
        </aop:aspect>

        <aop:aspect id="customerBeforeAccessAspect" ref="securityAspect">
            <aop:before method="getUserDataBefore" pointcut-ref="userUpdateAspectPointCut"/>
        </aop:aspect>

        <aop:aspect id="customerAccessAspect" ref="securityAspect">
            <aop:around method="checkAuthorizedAccess" pointcut-ref="userUpdateAspectPointCut"/>
        </aop:aspect>

        <aop:aspect id="customerAfterAccessAspect" ref="securityAspect">
            <aop:after-returning method="checkAccessAfter" pointcut-ref="userSelectAllAspectPointCut" returning="result"/>
            <aop:after-returning method="checkAccessAfter" pointcut-ref="userSelectAspectPointCut" returning="result"/>
        </aop:aspect>-->
    </aop:config>
<!--
    &lt;!&ndash; Security Aspect &ndash;&gt;
    <bean id="securityAspect" class="com.globallogic.store.security.aspect.SecurityManager">
        <property name="authenticationFacade" ref="authenticationFacade"/>
    </bean>

    <bean id="authenticationFacade" class="com.globallogic.store.security.aspect.AuthenticateFacade" />-->
</beans>